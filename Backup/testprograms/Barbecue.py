import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class Barbecue:
    def eliminate(self, n, voter, excluded):
    	if not excluded:
    		return 0

    	voter_ctr = {}
    	excluded_ctr = {}
        for i in range(n):
        	voter_ctr[i] = 0
        	excluded_ctr[i] = 0
        for v, e in zip(voter, excluded):
        	voter_ctr[v] += 1
        	excluded_ctr[e] += 1
        excluded_ctr = collections.Counter(excluded_ctr)
        max_excluded = excluded_ctr.most_common()[0][1]
        filtered_excluded_ctr = filter(lambda x: excluded_ctr[x] == max_excluded, excluded_ctr)
        if len(filtered_excluded_ctr) == 1:
        	return filtered_excluded_ctr[0]
        	
        filtered_voter_ctr = filter(lambda x: x in filtered_excluded_ctr, voter_ctr)
        max_voter = 0
        for v in voter_ctr:
        	if v in filtered_voter_ctr and voter_ctr[v] > max_voter:
        		max_voter = voter_ctr[v]
        for f in filtered_voter_ctr:
        	if voter_ctr[f] == max_voter:
        		return f
        return

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, p1, p2, hasAnswer, p3):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str(p0) + str(",") + str("{"))
	for i in range(len(p1)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str(p1[i]))
	
	sys.stdout.write(str("}") + str(",") + str("{"))
	for i in range(len(p2)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str(p2[i]))
	
	sys.stdout.write(str("}"))
	print(str("]"))
	obj = Barbecue()
	startTime = time.clock()
	answer = obj.eliminate(p0, p1, p2)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		print(str("Desired answer:"))
		print(str("\t") + str(p3))
	
	print(str("Your answer:"))
	print(str("\t") + str(answer))
	if (hasAnswer):
		res = answer == p3
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = 3
p1 = (0,1,2,2)
p2 = (2,2,0,1)
p3 = 2
all_right = (disabled or KawigiEdit_RunTest(0, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = 3
p1 = (0,2,2)
p2 = (2,0,1)
p3 = 2
all_right = (disabled or KawigiEdit_RunTest(1, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = 2
p1 = (0,1)
p2 = (1,0)
p3 = 0
all_right = (disabled or KawigiEdit_RunTest(2, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = 20
p1 = (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,19,19)
p2 = (0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,1,2,3)
p3 = 2
all_right = (disabled or KawigiEdit_RunTest(3, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = 5
p1 = (4,3,1,0)
p2 = (2,2,3,3)
p3 = 3
all_right = (disabled or KawigiEdit_RunTest(4, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 5 -----
disabled = False
p0 = 10
p1 = (4,5,6,7,8,9,0,1,2)
p2 = (5,6,7,8,9,0,1,2,3)
p3 = 0
all_right = (disabled or KawigiEdit_RunTest(5, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 6 -----
disabled = False
p0 = 7
p1 = (1,2,3,4,5,6,0,2,3,4,5,6,0,1,3,4,5,6,0,1,2,4,5,6,0,1,2,3,5,6,0,1,2,3,4,6,0,1,2,3,4,5)
p2 = (0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,6)
p3 = 0
all_right = (disabled or KawigiEdit_RunTest(6, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 7 -----
disabled = False
p0 = 5
p1 = ()
p2 = ()
p3 = 0
all_right = (disabled or KawigiEdit_RunTest(7, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
