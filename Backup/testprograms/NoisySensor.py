import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class NoisySensor:
    def medianFilter(self, data):
    	answer = [data[0]]
    	while len(data) >= 3:
    		answer.append(sorted(data[:3])[-2])
    		data = data[1:]
    	return answer + list(data[1:])

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, hasAnswer, p1):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("{"))
	for i in range(len(p0)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str(p0[i]))
	
	sys.stdout.write(str("}"))
	print(str("]"))
	obj = NoisySensor()
	startTime = time.clock()
	answer = obj.medianFilter(p0)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		print(str("Desired answer:"))
		sys.stdout.write(str("\t") + str("{"))
		for i in range(len(p1)):
			if (i > 0):
				sys.stdout.write(str(","))
			
			sys.stdout.write(str(p1[i]))
		
		print(str("}"))
	
	print(str("Your answer:"))
	sys.stdout.write(str("\t") + str("{"))
	for i in range(len(answer)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str(answer[i]))
	
	print(str("}"))
	if (hasAnswer):
		if (len(answer) != len(p1)):
			res = False
		else:
			for i in range(len(answer)):
				if (answer[i] != p1[i]):
					res = False
				
			
		
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = (1,2,3,4,5,6,7,8,9,10)
p1 = (1,2,3,4,5,6,7,8,9,10)
all_right = (disabled or KawigiEdit_RunTest(0, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = (10,1,9,2,8)
p1 = (10,9,2,8,8)
all_right = (disabled or KawigiEdit_RunTest(1, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = (500,500,500,500,500)
p1 = (500,500,500,500,500)
all_right = (disabled or KawigiEdit_RunTest(2, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = (-2147483648,2147483647)
p1 = (-2147483648,2147483647)
all_right = (disabled or KawigiEdit_RunTest(3, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = (432296535,1983848899,-434724194,135703525,-1146336142,-680568092,-1183352724,1337550909,-1597342716,-1901441857,1726722019,-558651015,649930787,1889036519,1752815826,930647381,-852547667,2028345278,-1835531493,-1040566300,-1566043783,-1282411107,-1123988603,2132078516,-1169614369,-523503536,1466102514,-2003903121,-779001645,1919742042,1210980485,-9273881,1033032137,-1474003783,296280591,920184999,-1235054743,-1329769514,-1727085135)
p1 = (432296535,432296535,135703525,-434724194,-680568092,-1146336142,-680568092,-1183352724,-1597342716,-1597342716,-558651015,649930787,649930787,1752815826,1752815826,930647381,930647381,-852547667,-1040566300,-1566043783,-1282411107,-1282411107,-1123988603,-1123988603,-523503536,-523503536,-523503536,-779001645,-779001645,1210980485,1210980485,1033032137,-9273881,296280591,296280591,296280591,-1235054743,-1329769514,-1727085135)
all_right = (disabled or KawigiEdit_RunTest(4, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
