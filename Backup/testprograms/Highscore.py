import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class Highscore:
    def getRank(self, scores, newscore, places):
    	dict_scores = collections.Counter(scores)
    	if not scores:
    		return 1
    	if places > len(scores) and scores[-1] >= newscore:
    		return len(scores) + 1 - dict_scores.get(newscore, 0)
    	for i, score in enumerate(scores):
    		if score < newscore:
    			return (i + 1) - dict_scores.get(newscore, 0)
        return -1

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, p1, p2, hasAnswer, p3):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("{"))
	for i in range(len(p0)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str(p0[i]))
	
	sys.stdout.write(str("}") + str(",") + str(p1) + str(",") + str(p2))
	print(str("]"))
	obj = Highscore()
	startTime = time.clock()
	answer = obj.getRank(p0, p1, p2)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		print(str("Desired answer:"))
		print(str("\t") + str(p3))
	
	print(str("Your answer:"))
	print(str("\t") + str(answer))
	if (hasAnswer):
		res = answer == p3
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = (100,90,80)
p1 = 90
p2 = 10
p3 = 2
all_right = (disabled or KawigiEdit_RunTest(0, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = ()
p1 = 0
p2 = 50
p3 = 1
all_right = (disabled or KawigiEdit_RunTest(1, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = (10,9,8,7,6,5,4,3,2,1)
p1 = 1
p2 = 10
p3 = -1
all_right = (disabled or KawigiEdit_RunTest(2, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = (10,9,8,7,6,5,4,3,3,0)
p1 = 1
p2 = 10
p3 = 10
all_right = (disabled or KawigiEdit_RunTest(3, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = (2000000000,19539,19466,19146,17441,17002,16348,16343,15981,15346,14748,14594,13752,13684,13336,13290,12939,12208,12163,12133,11621,11119,10872,10710,10390,9934,9296,8844,8662,8653,8168,7914,7529,7354,6016,5428,5302,5158,4853,4538,4328,3443,3222,2107,2107,1337,951,586,424,31)
p1 = 1337
p2 = 50
p3 = 46
all_right = (disabled or KawigiEdit_RunTest(4, p0, p1, p2, True, p3) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
