import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class Cards:
    def deal(self, numPlayers, deck):
    	players = {}
    	remaining_card = len(deck) % numPlayers
    	if remaining_card:
    		dealed_deck = deck[:-remaining_card]
    	else:
    		dealed_deck = deck
    	if not dealed_deck:
    		return [''] * numPlayers
    	for index, card in enumerate(dealed_deck):
    		key = index % (numPlayers)
    		if key not in players:
    			players[key] = [card]
    		else:
    			players[key].append(card)
        return [''.join(players[key]) for key in sorted(players.keys())]

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, p1, hasAnswer, p2):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str(p0) + str(",") + str("\"") + str(p1) + str("\""))
	print(str("]"))
	obj = Cards()
	startTime = time.clock()
	answer = obj.deal(p0, p1)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		print(str("Desired answer:"))
		sys.stdout.write(str("\t") + str("{"))
		for i in range(len(p2)):
			if (i > 0):
				sys.stdout.write(str(","))
			
			sys.stdout.write(str("\"") + str(p2[i]) + str("\""))
		
		print(str("}"))
	
	print(str("Your answer:"))
	sys.stdout.write(str("\t") + str("{"))
	for i in range(len(answer)):
		if (i > 0):
			sys.stdout.write(str(","))
		
		sys.stdout.write(str("\"") + str(answer[i]) + str("\""))
	
	print(str("}"))
	if (hasAnswer):
		if (len(answer) != len(p2)):
			res = False
		else:
			for i in range(len(answer)):
				if (answer[i] != p2[i]):
					res = False
				
			
		
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = 6
p1 = "012345012345012345"
p2 = ("000","111","222","333","444","555")
all_right = (disabled or KawigiEdit_RunTest(0, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = 4
p1 = "111122223333"
p2 = ("123","123","123","123")
all_right = (disabled or KawigiEdit_RunTest(1, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = 1
p1 = "012345012345012345"
p2 = ("012345012345012345",)
all_right = (disabled or KawigiEdit_RunTest(2, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = 6
p1 = "01234"
p2 = ("","","","","","")
all_right = (disabled or KawigiEdit_RunTest(3, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = 2
p1 = ""
p2 = ("","")
all_right = (disabled or KawigiEdit_RunTest(4, p0, p1, True, p2) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
