import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class LeftOrRight:
    def maxDistance(self, program):
        scenario_1 = program.replace('?', 'L')
        scenario_2 = program.replace('?', 'R')
        total_l_moves = {}
        total_r_moves = {}
        for scenario in [scenario_1, scenario_2]:
        	ctr = 0
        	total_l_moves[scenario] = 0
        	total_r_moves[scenario] = 0
        	for move in scenario:
        		if move == 'L':
        			ctr -= 1
        			if abs(ctr) > total_l_moves[scenario]:
        				total_l_moves[scenario] = abs(ctr)
        		elif move == 'R':
        			ctr += 1
        			if ctr > total_r_moves[scenario]:
        				total_r_moves[scenario] = ctr
        return max(list(total_l_moves.values()) + list(total_r_moves.values()))

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, hasAnswer, p1):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("\"") + str(p0) + str("\""))
	print(str("]"))
	obj = LeftOrRight()
	startTime = time.clock()
	answer = obj.maxDistance(p0)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		print(str("Desired answer:"))
		print(str("\t") + str(p1))
	
	print(str("Your answer:"))
	print(str("\t") + str(answer))
	if (hasAnswer):
		res = answer == p1
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = "LLLRLRRR"
p1 = 3
all_right = (disabled or KawigiEdit_RunTest(0, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = "R???L"
p1 = 4
all_right = (disabled or KawigiEdit_RunTest(1, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = "??????"
p1 = 6
all_right = (disabled or KawigiEdit_RunTest(2, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = "LL???RRRRRRR???"
p1 = 11
all_right = (disabled or KawigiEdit_RunTest(3, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = "L?L?"
p1 = 4
all_right = (disabled or KawigiEdit_RunTest(4, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
